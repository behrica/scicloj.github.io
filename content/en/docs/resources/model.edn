{;; plan: represent data in libs.md
 ;;
 ;; process: do it incrementally, move one section at a time.
 :tags
 [{:tag/id "array", :tag/description "array programming"}
  {:tag/id "tensor", :tag/description "tensor programming"}
  {:tag/id "linalg", :tag/description "linear algebra"}
  {:tag/id "native", :tag/description "interop with native-optimized libraries"}
  {:tag/id "gpu", :tag/description "gpu support"}
  {:tag/id "vis", :tag/description "data visualization and visual art"}
  {:tag/id "vega", :tag/description "visualization using [Vega](https://vega.github.io/vega/)/[Vega-lite](https://vega.github.io/vega-lite/) specifications"}
  {:tag/id "lit", :tag/description "literate programming"}
  {:tag/id "ui", :tag/description "building UIs for data exploration"}
  {:tag/id "geo", :tag/description "geographical and geometrical data processing"}
  {:tag/id "df", :tag/description "dataframe-like data structures and abstractions"}
  {:tag/id "data", :tag/description "general data processing"}
  {:tag/id "csv", :tag/description "csv import/export"}
  {:tag/id "xl", :tag/description "Excel spreadsheets interaction"}
  {:tag/id "json", :tag/description "json import/export"}
  {:tag/id "xform", :tag/description "transducers support"}
  {:tag/id "math", :tag/description "diverse math functions"}
  {:tag/id "stat", :tag/description "statistics"}
  {:tag/id "ts", :tag/description "time series analysis"}
  {:tag/id "rand", :tag/description "simulation and random sampling"}
  {:tag/id "prob", :tag/description "Bayesian computing and probabilistic programming"}
  {:tag/id "ml", :tag/description "machine learning"}
  {:tag/id "dnn", :tag/description "deep learning"}
  {:tag/id "opt", :tag/description "optimization"}
  {:tag/id "graph", :tag/description "graph algorithms and network analysis"}
  {:tag/id "interop", :tag/description "general libraries for interop"}
  {:tag/id "cljs", :tag/description "supports not only Clojure but also Clojurescript"}
  {:tag/id "nlp", :tag/description "natural language processing"}]

 :teodorlu/questions [
                      ;; I'm having a bit of a hard time understanding the motivation between having both the star
                      ;; and :readiness :experimental. Does that mean /some/ of the API is considered stable, but
                      ;; the library is still under active development, and collaboration is invited?
                      ;;
                      ;; Perhaps we can be even clearer on what the call to action / "job to be done" for tags :)
                      ]
 :libs
 [;; # Diverse toolsets
  ({:lib/name "fastmath",
    :lib/url "https://github.com/generateme/fastmath",
    :lib/category :div-tools,
    :tags #{:stat :rand :act :ml :math},
    :star :star,
    :description
    "a collection of functions for mathematical and statistical computing, machine learning, etc., wrapping several JVM libraries"}
   {:lib/name "spork",
    :lib/url "https://github.com/joinr/spork",
    :lib/category :div-tools,
    :tags #{:rand :vis :df :ui :graph :opt},
    :description "a toolbox for data-science and operation research"}
   {:lib/name "Incanter",
    :lib/url "https://github.com/incanter/incanter",
    :lib/category :div-tools,
    :tags #{:csv :stat :rand :vis :df},
    :description
    "an R-like data-science platform built on top of the core.matrix abstractions"}
   {:lib/name "huri",
    :lib/url "https://github.com/sbelak/huri",
    :lib/category :div-tools,
    :tags #{:stat :vis :df},
    :description
    "a toolbox for data-science using plain sequences of maps"})

  ;; Optimization
  ({:lib/name "matlib",
    :lib/url "https://github.com/atisharma/matlib",
    :lib/category :optimization,
    :tags #{:act :opt},
    :star :star,
    :description
    "optimisation and control theory tools and convenience functions based on Neanderthal."})

  ;; Visual tools: literate programming and data visualization
  ({:lib/name "Saite",
    :lib/url "https://github.com/jsa-aerial/saite",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :hiccup :ui :vega :cljs},
    :star :star,
    :description
    "data exploration, dashboards, and interactive documents"}
   {:lib/name "Oz",
    :lib/url "https://github.com/metasoarous/oz",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega},
    :star :star,
    :description
    "data visuzliation using Vega/Vega-Lite and Hiccup, and a live-reload platform for literate-programming"}
   {:lib/name "Clerk",
    :lib/url "https://github.com/nextjournal/clerk",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega :cljs},
    :star :star,
    :description "local-first notebooks for Clojure"}
   {:lib/name "Clay",
    :lib/url "https://github.com/scicloj/clay",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega :cljs},
    :star :star,
    :description
    "a small tool for compatible dynamic experience over some of the other visual tools"}
   {:lib/name "rmarkdown-clojue",
    :lib/url "https://github.com/genmeblog/rmarkdown-clojure",
    :lib/category :visual-tools,
    :tags #{:vis :lit},
    :star :star,
    :description
    "rendering Clojure code in various format using [Rmarkdown](https://rmarkdown.rstudio.com/)"}
   {:lib/name "Pink-Gorilla/Goldly",
    :lib/url "https://github.com/pink-gorilla/goldly",
    :lib/category :visual-tools,
    :tags #{:vis :exp :lit :act :ui :cljs},
    :star :star,
    :description
    "a port of the Gorilla REPL project using a Clojurescript (Reagent) frontend"}
   {:lib/name "Org-babel-clojure",
    :lib/url
    "https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-clojure.html",
    :lib/category :visual-tools,
    :tags #{:lt},
    :star :star,
    :description "executing Clojure inside Emacs Org-mode documents"}
   {:lib/name "Devcards",
    :lib/url "https://github.com/bhauman/devcards",
    :lib/category :visual-tools,
    :tags #{:lit :cljs},
    :star :star,
    :description "visual repl exprience for Clojurescript"}
   {:lib/name "Notespace",
    :lib/url "https://github.com/scicloj/notespace",
    :lib/category :visual-tools,
    :tags #{:exp :lit :act},
    :star :star,
    :description
    "notebook experience with Clojure namespaces edited at any editor"}
   {:lib/name "Reveal",
    :lib/url "https://vlaaad.github.io/reveal/",
    :lib/category :visual-tools,
    :tags #{:act},
    :star :star,
    :description "browser-based data navigation GUI"}
   {:lib/name "Portal",
    :lib/url "https://github.com/djblue/portal",
    :lib/category :visual-tools,
    :tags #{:act},
    :star :star,
    :description "desktop data navigation GUI"}
   {:lib/name "Gorilla-REPL",
    :lib/url "http://gorilla-repl.org/",
    :lib/category :visual-tools,
    :tags #{:lit},
    :star nil,
    :description
    "a notebook application written in Clojure and Javascript"}
   {:lib/name "proto-repl-charts",
    :lib/url "https://github.com/jasongilman/proto-repl-charts",
    :lib/category :visual-tools,
    :tags #{:vis},
    :star nil,
    :description "an Atom plugin for displaying tables and graphs"}
   {:lib/name "Maria",
    :lib/url "https://github.com/mhuebert/maria",
    :lib/category :visual-tools,
    :tags #{:vis :lit :cljs},
    :star nil,
    :description "a Clojurescript coding environment for beginners"})

  ;; ## Vega rendering
  ({:lib/name "darkstar",
    :lib/url "https://github.com/appliedsciencestudio/darkstar",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star :star,
    :description
    "a minimal wrapper over Vega/Vega-lite as a single JVM-only Clojure library, using the GraalJS javascript runtime, which [does not require GraalVM runtime](https://github.com/graalvm/graaljs/blob/master/docs/user/RunOnJDK.md) to run."
    }
   {:lib/name "xvsy",
    :lib/url "https://github.com/dvdt/xvsy",
    :lib/category :vega-rendering,
    :tags #{:vis :vega :cljs},
    :star nil,
    :description "grammer of graphics over Vega"}
   {:lib/name "Vegan",
    :lib/url "https://github.com/cnuernber/Vegan/",
    :lib/category :vega-rendering,
    :tags #{:vis :act :vega},
    :star nil,
    :description "a nodejs clojurescript library designed to validate and render Vega and Vega-lite files, supports docker-based setup"}
   {:lib/name "Vega-clj",
    :lib/url "https://github.com/behrica/vg-cli",
    :lib/category :vega-rendering,
    :tags #{:vis :act :vega},
    :star nil,
    :description
    "a clojure wrapper for the (node-based) Vega-cli and Vega-lite standalone scrips"}
   {:lib/name "Optikon",
    :lib/url "https://github.com/stathissideris/optikon",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star nil,
    :description "a command line tool that wraps Vega and Vega-lite, using GraalVM polyglot programming"}
   {:lib/name "Vegafx",
    :lib/url "https://github.com/joinr/Vegafx",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star nil,
    :description
    "a static-site viewer using javafx that renders Vega specs"}
   {:lib/name "VL example gallery as EDN",
    :lib/url "https://behrica.github.io/vl-galery/convert",
    :lib/category :vega-rendering,
    :tags #{},
    :star nil,
    :description
    "The vega lite example in EDN format, ready to be copy/pasted into Clojure code"})

  ;; ## Data visualization libraries
  ({:lib/name "cljplot",
    :lib/url "https://github.com/generateme/cljplot",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :exp :act},
    :star :star,
    :description
    "a data visualization platform written in Clojure and inspired by R's ggplot2 and lattice libraries"}
   {:lib/name "Hanami",
    :lib/url "https://github.com/jsa-aerial/hanami",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :act :hiccup :ui :vega :cljs},
    :star :star,
    :description
    "a template system for creating interactive data visualizations using Vega/Vega-lite, Reagent and Re-Com"}
   {:lib/name "darkstar",
    :lib/url "https://github.com/appliedsciencestudio/darkstar",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :act :vega :cljs},
    :star :star,
    :description
    "simple data visualization for Clojure/Clojurescript that using vega and [darkstar](https://github.com/appliedsciencestudio/darkstar) for rendering"}
   {:lib/name nil,
    :lib/url nil,
    :lib/category :data-visualization-libraries,
    :tags #{:vis :exp :act :vega},
    :star :star,
    :description "a data visualization library for beginners (WIP)"}
   {:lib/name "Clojure2D",
    :lib/url "https://github.com/Clojure2D/clojure2d",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :act},
    :star :star,
    :description
    "Java2D wrapper + creative coding supporting functions (based on Processing and openFrameworks)"}
   {:lib/name "Quil",
    :lib/url "https://github.com/quil/quil",
    :lib/category :data-visualization-libraries,
    :tags #{:vis},
    :star :star,
    :description "a clojure/clojuresctit wrapper for Processing"}
   {:lib/name "thi-ng/geom",
    :lib/url "https://github.com/thi-ng/geom",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :cljs},
    :star :star,
    :description "2d/3d geometry toolkit"}
   {:lib/name "Gorilla-plot",
    :lib/url "https://github.com/JonyEpsilon/gorilla-plot",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :vega},
    :star :star,
    :description "plotting functions using Vega for Gorilla-REPL"}
   {:lib/name "gg4clj",
    :lib/url "https://github.com/JonyEpsilon/gg4clj",
    :lib/category :data-visualization-libraries,
    :tags #{:r :vis},
    :star nil,
    :description "a clojure DSL for creating ggplot2 plots using R"}
   {:lib/name "gg4clj port",
    :lib/url "https://github.com/pink-gorilla/gg4clj",
    :lib/category :data-visualization-libraries,
    :tags #{},
    :star nil,
    :description
    "by the [Pink Gorilla](https://pink-gorilla.github.io) project"}
   {:lib/name "Analemma",
    :lib/url "https://liebke.github.io/analemma/",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :exp :cljs},
    :star nil,
    :description
    "generating charts and SVG with a syntax similar to Incanter's and a visual theme similar to ggplot2."}
   {:lib/name "emacs-Vega-view",
    :lib/url "https://github.com/appliedsciencestudio/emacs-Vega-view",
    :lib/category :data-visualization-libraries,
    :tags #{:vis :act :vega},
    :star nil,
    :description
    "an emacs mode to facilitate interactive data visualization using Vega from within emacs. Supports elisp, json and clojure notations"})

  ;; ## Data processing
  ({:lib/name "Specter",
    :lib/url "https://github.com/redplanetlabs/specter",
    :lib/category :data-processing,
    :tags #{:act :cljs :data},
    :star :star,
    :description
    "declarative navigation of nested data structures for selection and transformation in Clojure and Clojurescript"}
   {:lib/name "Meander",
    :lib/url "https://github.com/noprompt/meander",
    :lib/category :data-processing,
    :tags #{:act :cljs :data},
    :star :star,
    :description
    "transforming neseted data structures by declaratively declaring the shape of source and target datastructures"}
   {:lib/name "xforms",
    :lib/url "https://github.com/cgrand/xforms",
    :lib/category :data-processing,
    :tags #{:xform :cljs :data},
    :star :star,
    :description "a collection of transduces and reducing functions"}
   {:lib/name "Odin",
    :lib/url "https://github.com/halgari/odin",
    :lib/category :data-processing,
    :tags #{:data},
    :star nil,
    :description
    "processing nested data structures by extensible logic programming"}
   {:lib/name "Charred",
    :lib/url "https://github.com/cnuernber/charred",
    :lib/category :data-processing,
    :tags #{:csv :act :json},
    :star :star,
    :description
    "zero dependency efficient read/write of json and csv data."}
   {:lib/name "Semantic Csv",
    :lib/url "https://github.com/metasoarous/semantic-csv",
    :lib/category :data-processing,
    :tags #{:csv :cljs},
    :star nil,
    :description "higher level csv parsing/processing"})

  ;; ## Geospatial processing
  ({:lib/name "geo",
    :lib/url "https://github.com/Factual/geo",
    :lib/category :geospatial-processing,
    :tags #{:geo :act},
    :star :star,
    :description
    "unifying several JVM libraries for geoprocessing with a Clojure API"}
   {:lib/name "ovid",
    :lib/url "https://github.com/willcohen/ovid",
    :lib/category :geospatial-processing,
    :tags #{:geo :exp :act},
    :star :star,
    :description "protocols for geospatial concepts"}
   {:lib/name "aurelius",
    :lib/url "https://github.com/willcohen/aurelius",
    :lib/category :geospatial-processing,
    :tags #{:xform :geo :exp :act},
    :star :star,
    :description "transducible analysis of geospatial features"}
   {:lib/name "geo-clj",
    :lib/url "https://github.com/r0man/geo-clj",
    :lib/category :geospatial-processing,
    :tags #{:geo :act :cljs},
    :star :star,
    :description "encoding/decoding of geographic datatypes"})

  ;; ## Dataframe-like structures
  ({:lib/name "tech.ml.dataset",
    :lib/url "https://github.com/techascent/tech.ml.dataset",
    :lib/category :dataframe-like-structures,
    :tags #{:csv :stat :vis :df :act},
    :star :star,
    :description
    "abstractions for dataframe-like structures in clojure, based on dtype-next infrastructure"}
   {:lib/name "tablecloth",
    :lib/url "https://github.com/scicloj/tablecloth",
    :lib/category :dataframe-like-structures,
    :tags #{:csv :df :act},
    :star :star,
    :description
    "a dataframe grammar wrapping tech.ml.dataset, inspired by serveral R libraries"}
   {:lib/name "clojask",
    :lib/url "https://clojure-finance.github.io/clojask-website/",
    :lib/category :dataframe-like-structures,
    :tags #{:df :act},
    :star :star,
    :description
    "a library for parallel computing of larger-than-memory datasets."}
   {:lib/name "Panthera",
    :lib/url "https://github.com/alanmarazzi/panthera",
    :lib/category :dataframe-like-structures,
    :tags #{:df :py},
    :star nil,
    :description "a Clojure API wrapping Python's Pandas library"}
   {:lib/name "koala",
    :lib/url "https://github.com/aria42/koala",
    :lib/category :dataframe-like-structures,
    :tags #{:csv :exp :df},
    :star nil,
    :description
    "Pandas-like data-processing for clojure with some I/O functionality (experimental)"}
   {:lib/name "dataframe",
    :lib/url "https://github.com/ghl3/dataframe",
    :lib/category :dataframe-like-structures,
    :tags #{:df},
    :star nil,
    :description "Pandas-like data processing for clojure"}
   {:lib/name "danzig",
    :lib/url "https://github.com/ribelo/wombat",
    :lib/category :dataframe-like-structures,
    :tags #{:xform :exp :df :act},
    :star nil,
    :description
    "Pandas-like data processing using transducers (danzig was formerly named wombat)"}
   {:lib/name "bamboo",
    :lib/url "https://github.com/kjothen/bamboo",
    :lib/category :dataframe-like-structures,
    :tags #{:df},
    :star nil,
    :description
    "a minimal data processing library for Clojure, with some of the capabilities of pandas and numpy"})

  ;; Spreadsheets
  ({:lib/name "Docjure",
    :lib/url "https://github.com/mjul/docjure",
    :lib/category :spreadsheets,
    :tags #{:act :xl},
    :star :star,
    :description
    "making it easy to read and write Excel spreadsheets as Clojure data"}
   {:lib/name "kixi.large",
    :lib/url "https://github.com/MastodonC/kixi.large",
    :lib/category :spreadsheets,
    :tags #{:exp :act :xl},
    :star :star,
    :description
    "a tech.ml.dataset-friendly fork of Docjure, providing clear entry point at the workbook and sheet level and a way to insert images"}
   {:lib/name "Excel-clj",
    :lib/url "https://github.com/matthewdowney/excel-clj",
    :lib/category :spreadsheets,
    :tags #{:act :xl},
    :star :star,
    :description
    "building Excel spreadsheets from Clojure data in various forms such as trees, tables, and more"}
   {:lib/name "fxl",
    :lib/url "https://github.com/zero-one-group/fxl",
    :lib/category :spreadsheets,
    :tags #{:exp :act :xl},
    :star :star,
    :description
    "manipulating spreadsheets with a versatile API for handling various spreadsheet constructs"}
   {:lib/name "Excel-templates",
    :lib/url "https://github.com/tomfaulhaber/excel-templates",
    :lib/category :spreadsheets,
    :tags #{:exp :xl},
    :star nil,
    :description
    "building Excel spreadsheets from Clojure data combined with an Excel sheet serving as a template"})

  ;; ## Arrays and linear algebra
  ({:lib/name "dtype-next",
    :lib/url "https://github.com/cnuernber/dtype-next",
    :lib/category :arrays-and-linalg,
    :tags #{:stat :tensor :act :array :native},
    :star :star,
    :description
    "abstractions and foundations for working with array-like structures and sequential structures"}
   {:lib/name "Neanderthal",
    :lib/url "https://neanderthal.uncomplicate.org/",
    :lib/category :arrays-and-linalg,
    :tags #{:gpu :act :array :native :linalg},
    :star :star,
    :description "matrix and linear algebra in Clojure"}
   {:lib/name "tvm-clj",
    :lib/url "https://github.com/techascent/tvm-clj",
    :lib/category :arrays-and-linalg,
    :tags #{:gpu :exp :act :array :native :linalg},
    :star nil,
    :description
    "bindings to [tvm](https://github.com/apache/incubator-tvm)"}
   {:lib/name "jutsu.matrix",
    :lib/url "https://github.com/hswick/jutsu.matrix",
    :lib/category :arrays-and-linalg,
    :tags #{:gpu :array :native :linalg},
    :star nil,
    :description
    "bindigs to [ND4J](https://deeplearning4j.org/docs/latest/nd4j-overview)"}
   {:lib/name "core.matrix",
    :lib/url "https://github.com/mikera/core.matrix",
    :lib/category :arrays-and-linalg,
    :tags #{:array :native :linalg :cljs},
    :star nil,
    :description "matrix abstractions, supporting diffent backends"}
   {:lib/name "denisovan",
    :lib/url "https://github.com/cailuno/denisovan",
    :lib/category :arrays-and-linalg,
    :tags #{:gpu :array :native :linalg},
    :star nil,
    :description "Neanderthal backend for core.matrix"})

  ;; ### Deep learning
  ({:lib/name "Deep Diamond",
    :lib/url "https://github.com/uncomplicate/deep-diamond",
    :lib/category :deep-learning,
    :tags #{:gpu :tensor :act :native :dnn},
    :star :star,
    :description
    "infrastructure for tensor computation and deep learning"}
   {:lib/name "clj-djl",
    :lib/url "https://github.com/scicloj/clj-djl",
    :lib/category :deep-learning,
    :tags #{:gpu :tensor :act :native :dnn},
    :star :star,
    :description "a wrapper for the Deep Java Library"}
   {:lib/name "MXNet",
    :lib/url
    "https://github.com/apache/incubator-mxnet/tree/master/contrib/clojure-package",
    :lib/category :deep-learning,
    :tags #{:dnn},
    :star nil,
    :description "bindings to Apache MXNet, a part of the MXNet project"}
   {:lib/name "jutsu.ai",
    :lib/url "https://github.com/hswick/jutsu.ai",
    :lib/category :deep-learning,
    :tags #{:dnn},
    :star nil,
    :description "a wrapper for deeplearning4j"}
   {:lib/name "Cortex",
    :lib/url "https://github.com/originrose/cortex",
    :lib/category :deep-learning,
    :tags #{:dnn},
    :star nil,
    :description "a deep learning library written in Clojure"}
   {:lib/name "Flare",
    :lib/url "https://github.com/aria42/flare",
    :lib/category :deep-learning,
    :tags #{:dnn},
    :star nil,
    :description "dynamic neural networks in Clojure"})


  ;; TODO more sections ...
  ]

 }
