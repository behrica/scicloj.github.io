{;; plan: represent data in libs.md
 ;;
 ;; process: do it incrementally, move one section at a time.
 :tags
 [{:tag/id "array", :tag/description "array programming"}
  {:tag/id "tensor", :tag/description "tensor programming"}
  {:tag/id "linalg", :tag/description "linear algebra"}
  {:tag/id "native", :tag/description "interop with native-optimized libraries"}
  {:tag/id "gpu", :tag/description "gpu support"}
  {:tag/id "vis", :tag/description "data visualization and visual art"}
  {:tag/id "vega", :tag/description "visualization using [Vega](https://vega.github.io/vega/)/[Vega-lite](https://vega.github.io/vega-lite/) specifications"}
  {:tag/id "lit", :tag/description "literate programming"}
  {:tag/id "ui", :tag/description "building UIs for data exploration"}
  {:tag/id "geo", :tag/description "geographical and geometrical data processing"}
  {:tag/id "df", :tag/description "dataframe-like data structures and abstractions"}
  {:tag/id "data", :tag/description "general data processing"}
  {:tag/id "csv", :tag/description "csv import/export"}
  {:tag/id "xl", :tag/description "Excel spreadsheets interaction"}
  {:tag/id "json", :tag/description "json import/export"}
  {:tag/id "xform", :tag/description "transducers support"}
  {:tag/id "math", :tag/description "diverse math functions"}
  {:tag/id "stat", :tag/description "statistics"}
  {:tag/id "ts", :tag/description "time series analysis"}
  {:tag/id "rand", :tag/description "simulation and random sampling"}
  {:tag/id "prob", :tag/description "Bayesian computing and probabilistic programming"}
  {:tag/id "ml", :tag/description "machine learning"}
  {:tag/id "dnn", :tag/description "deep learning"}
  {:tag/id "opt", :tag/description "optimization"}
  {:tag/id "graph", :tag/description "graph algorithms and network analysis"}
  {:tag/id "interop", :tag/description "general libraries for interop"}
  {:tag/id "cljs", :tag/description "supports not only Clojure but also Clojurescript"}
  {:tag/id "nlp", :tag/description "natural language processing"}]

 :teodorlu/questions [
                      ;; I'm having a bit of a hard time understanding the motivation between having both the star
                      ;; and :readiness :experimental. Does that mean /some/ of the API is considered stable, but
                      ;; the library is still under active development, and collaboration is invited?
                      ;;
                      ;; Perhaps we can be even clearer on what the call to action / "job to be done" for tags :)
                      ]
 :libs
 [;; # Diverse toolsets
  ({:lib/name "fastmath",
    :lib/url "https://github.com/generateme/fastmath",
    :lib/category :div-tools,
    :tags #{:stat :rand :act :ml :math},
    :star :star,
    :description
    "a collection of functions for mathematical and statistical computing, machine learning, etc., wrapping several JVM libraries"}
   {:lib/name "spork",
    :lib/url "https://github.com/joinr/spork",
    :lib/category :div-tools,
    :tags #{:rand :vis :df :ui :graph :opt},
    :description "a toolbox for data-science and operation research"}
   {:lib/name "Incanter",
    :lib/url "https://github.com/incanter/incanter",
    :lib/category :div-tools,
    :tags #{:csv :stat :rand :vis :df},
    :description
    "an R-like data-science platform built on top of the core.matrix abstractions"}
   {:lib/name "huri",
    :lib/url "https://github.com/sbelak/huri",
    :lib/category :div-tools,
    :tags #{:stat :vis :df},
    :description
    "a toolbox for data-science using plain sequences of maps"})

  ;; Optimization
  ({:lib/name "matlib",
    :lib/url "https://github.com/atisharma/matlib",
    :lib/category :optimization,
    :tags #{:act :opt},
    :star :star,
    :description
    "optimisation and control theory tools and convenience functions based on Neanderthal."})

  ;; Visual tools: literate programming and data visualization
  ({:lib/name "Saite",
    :lib/url "https://github.com/jsa-aerial/saite",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :hiccup :ui :vega :cljs},
    :star :star,
    :description
    "data exploration, dashboards, and interactive documents"}
   {:lib/name "Oz",
    :lib/url "https://github.com/metasoarous/oz",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega},
    :star :star,
    :description
    "data visuzliation using Vega/Vega-Lite and Hiccup, and a live-reload platform for literate-programming"}
   {:lib/name "Clerk",
    :lib/url "https://github.com/nextjournal/clerk",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega :cljs},
    :star :star,
    :description "local-first notebooks for Clojure"}
   {:lib/name "Clay",
    :lib/url "https://github.com/scicloj/clay",
    :lib/category :visual-tools,
    :tags #{:vis :lit :act :vega :cljs},
    :star :star,
    :description
    "a small tool for compatible dynamic experience over some of the other visual tools"}
   {:lib/name "rmarkdown-clojue",
    :lib/url "https://github.com/genmeblog/rmarkdown-clojure",
    :lib/category :visual-tools,
    :tags #{:vis :lit},
    :star :star,
    :description
    "rendering Clojure code in various format using [Rmarkdown](https://rmarkdown.rstudio.com/)"}
   {:lib/name "Pink-Gorilla/Goldly",
    :lib/url "https://github.com/pink-gorilla/goldly",
    :lib/category :visual-tools,
    :tags #{:vis :exp :lit :act :ui :cljs},
    :star :star,
    :description
    "a port of the Gorilla REPL project using a Clojurescript (Reagent) frontend"}
   {:lib/name "Org-babel-clojure",
    :lib/url
    "https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-clojure.html",
    :lib/category :visual-tools,
    :tags #{:lt},
    :star :star,
    :description "executing Clojure inside Emacs Org-mode documents"}
   {:lib/name "Devcards",
    :lib/url "https://github.com/bhauman/devcards",
    :lib/category :visual-tools,
    :tags #{:lit :cljs},
    :star :star,
    :description "visual repl exprience for Clojurescript"}
   {:lib/name "Notespace",
    :lib/url "https://github.com/scicloj/notespace",
    :lib/category :visual-tools,
    :tags #{:exp :lit :act},
    :star :star,
    :description
    "notebook experience with Clojure namespaces edited at any editor"}
   {:lib/name "Reveal",
    :lib/url "https://vlaaad.github.io/reveal/",
    :lib/category :visual-tools,
    :tags #{:act},
    :star :star,
    :description "browser-based data navigation GUI"}
   {:lib/name "Portal",
    :lib/url "https://github.com/djblue/portal",
    :lib/category :visual-tools,
    :tags #{:act},
    :star :star,
    :description "desktop data navigation GUI"}
   {:lib/name "Gorilla-REPL",
    :lib/url "http://gorilla-repl.org/",
    :lib/category :visual-tools,
    :tags #{:lit},
    :star nil,
    :description
    "a notebook application written in Clojure and Javascript"}
   {:lib/name "proto-repl-charts",
    :lib/url "https://github.com/jasongilman/proto-repl-charts",
    :lib/category :visual-tools,
    :tags #{:vis},
    :star nil,
    :description "an Atom plugin for displaying tables and graphs"}
   {:lib/name "Maria",
    :lib/url "https://github.com/mhuebert/maria",
    :lib/category :visual-tools,
    :tags #{:vis :lit :cljs},
    :star nil,
    :description "a Clojurescript coding environment for beginners"})

  ;; ## Vega rendering
  ({:lib/name "darkstar",
    :lib/url "https://github.com/appliedsciencestudio/darkstar",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star :star,
    :description
    "a minimal wrapper over Vega/Vega-lite as a single JVM-only Clojure library, using the GraalJS javascript runtime, which [does not require GraalVM runtime](https://github.com/graalvm/graaljs/blob/master/docs/user/RunOnJDK.md) to run."
    }
   {:lib/name "xvsy",
    :lib/url "https://github.com/dvdt/xvsy",
    :lib/category :vega-rendering,
    :tags #{:vis :vega :cljs},
    :star nil,
    :description "grammer of graphics over Vega"}
   {:lib/name "Vegan",
    :lib/url "https://github.com/cnuernber/Vegan/",
    :lib/category :vega-rendering,
    :tags #{:vis :act :vega},
    :star nil,
    :description "supports docker-based setup."}
   {:lib/name "Vega-clj",
    :lib/url "https://github.com/behrica/vg-cli",
    :lib/category :vega-rendering,
    :tags #{:vis :act :vega},
    :star nil,
    :description
    "a clojure wrapper for the (node-based) Vega-cli and Vega-lite standalone scrips"}
   {:lib/name "Optikon",
    :lib/url "https://github.com/stathissideris/optikon",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star nil,
    :description "using GraalVM polyglot programming"}
   {:lib/name "Vegafx",
    :lib/url "https://github.com/joinr/Vegafx",
    :lib/category :vega-rendering,
    :tags #{:vis :vega},
    :star nil,
    :description
    "a static-site viewer using javafx that renders Vega specs"}
   {:lib/name "VL example gallery as EDN",
    :lib/url "https://behrica.github.io/vl-galery/convert",
    :lib/category :vega-rendering,
    :tags #{},
    :star nil,
    :description
    "The vega lite example in EDN format, ready to be copy/pasted into Clojure code"})

  ;; TODO more sections ...
  ]

 }
